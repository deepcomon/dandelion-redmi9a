name: build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Clone kernel source
      run: |
        git clone https://github.com/dandelion64-Archives/android_kernel_mediatek_mt6765g.git kernel
        cd kernel
        ls -la

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y bc bison flex libssl-dev make gcc clang lld

    - name: Build kernel (Image.gz-dtb)
      run: |
        cd kernel
        export ARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
        export PATH=$PATH:$(pwd)/../toolchain/bin
        make O=out defconfig
        make -j$(nproc) O=out
        find . -name "Image.gz-dtb"

    - name: Prepare flashable ZIP
      run: |
        git clone https://github.com/osm0sis/AnyKernel3.git AnyKernel
        IMAGE_PATH=$(find kernel -name "Image.gz-dtb" | head -n 1)
        if [ -z "$IMAGE_PATH" ]; then
          echo "Image.gz-dtb not found!"
          exit 1
        fi
        cp "$IMAGE_PATH" AnyKernel/
        cd AnyKernel
        zip -r9 ../kernel.zip *

    - name: Upload flashable ZIP as artifact
      uses: actions/upload-artifact@v4
      with:
        name: kernel-flashable
        path: kernel.zip

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: kernel.zip
        tag_name: build-${{ github.run_number }}
        name: "Kernel Build #${{ github.run_number }}"
        body: "Автоматическая сборка ядра"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
